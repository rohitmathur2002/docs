kind: Deployment
apiVersion: apps/v1
metadata:
   name: mydeployments
spec:
   replicas: 2
   selector:     
    matchLabels:
     name: deployment
   template:
     metadata:
       name: testpod
       labels:
         name: deployment
   spec:
      containers:
        - name: c00
          image: ubuntu
          command: ["/bin/bash", "-c", "while true; do echo Technical-Guftgu; sleep 5; done"]
--- 
kind: Pod
apiVersion: v1
metadata: 
  name: myapp
  labels:
    name: production
spec:
  containers: 
    - name: c00
      image: ubuntu
      command: ["/bin/bash", "-c", "while true; do echo Technical-Guftgu; sleep 5; done"]
    - name: c01
      image: ubuntu/apache2
      command: ["/bin/bash", "-c", "while true; do echo Technical-Guftgu; sleep 5; done"]
      ports: 
        - containerPort: 80
---
kind: Pod
apiVersion: v1
metadata:
  name: myapp
spec:
  containers:
  - name: myapp
    image: ubuntu/apache2
    ports:
      - containerPort: 80
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: nginx
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: myapp
spec:
  selector:
    app: myapp
  ports:
  - port: 80
    targetPort: 80
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  name: myvolhostpath
spec:
  containers:
  - image: centos
    name: testc
    command: ["/bin/bash", "-c", "sleep 15000"]
    volumeMounts:
    - mountPath: /tmp/hostpath
      name: testvolume
  volumes:
  - name: testvolume
    hostPath:
      path: /tmp/data 
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: ubuntu/apache2
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: testvolume
      volumes:
      - name: testvolume
        hostPath:
          path: /home/ubuntu/Responsive-eCommerce-Project
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp1
spec:
  selector:
    matchLabels:
      app: myapp1
  template:
    metadata:
      labels:
        app: myapp1
    spec:
      containers:
      - name: myapp1
        image: mysql:5.7
        args: ["--default-authentication-plugin=mysql_native_password"]
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: w1673657_0
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d
          name: testing
      volumes: 
      - name: testing
        hostPath:
          path: /home/ubuntu/db
